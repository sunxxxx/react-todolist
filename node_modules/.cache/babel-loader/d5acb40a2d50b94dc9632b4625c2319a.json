{"ast":null,"code":"var _jsxFileName = \"/Users/sunxx/github/react-todolist/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n  }\n\n  componentDidMount() {}\n\n  add(e) {\n    if (window.event.keyCode === 13) {\n      this.setState({\n        list: [...this.state.list, e.target.value]\n      });\n      e.target.value = '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"To DO List\")), React.createElement(\"div\", {\n      className: \"class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onKeyDown: this.add.bind(this),\n      placeholder: \"What needs to be done?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.list.map(todo => React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, todo)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sunxx/github/react-todolist/src/App.js"],"names":["React","App","Component","constructor","props","state","list","componentDidMount","add","e","window","event","keyCode","setState","target","value","render","bind","map","todo","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAIA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,GAAG,CAACC,CAAD,EAAG;AACJ,QAAGC,MAAM,CAACC,KAAP,CAAaC,OAAb,KAAyB,EAA5B,EAA+B;AAC7B,WAAKC,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,EAAoBG,CAAC,CAACK,MAAF,CAASC,KAA7B;AAAN,OAAd;AACAN,MAAAA,CAAC,CAACK,MAAF,CAASC,KAAT,GAAiB,EAAjB;AAED;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAE,KAAKR,GAAL,CAASS,IAAT,CAAc,IAAd,CAA9B;AAAmD,MAAA,WAAW,EAAC,wBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAqBC,IAAD,IACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAnB,CADD,CADH,CAFF,CANF,CADF;AAiBD;;AAtC+B;;AAyClC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  componentDidMount(){\n\n  }\n\n  add(e){\n    if(window.event.keyCode === 13){\n      this.setState({list:[...this.state.list,e.target.value]})\n      e.target.value = ''\n      \n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n          <p>\n            To DO List\n          </p>\n        </header>\n        <div className=\"class\">\n          <input type=\"text\" onKeyDown={this.add.bind(this)} placeholder=\"What needs to be done?\" />\n          <div className=\"test\">\n            {this.state.list.map((todo) => (\n              <li key={todo.id}>{todo}</li>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}